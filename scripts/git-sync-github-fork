# -*- mode: Shell-script-*-
#!/usr/bin/bash

# git-sync-github-fork
# Author: Mario Fernandez
#
# Synchronizes the given github fork with the original.
#
# The following assumptions are made:
#
# - The original repo is available as a remote under the 'remote'
# variable.
# - The master branch can be fast-forwarded with the content of the
# main branch of the source.
# - There is a branch where changes are integrated, under the 'devel'
# variable.
#
# The master branch is synchronized with the latest changes in the
# source repo. This changes are merged to the development branch.
#
# By using this setup, the master is always compatible with the source
# repository, and thus any feature branch created from master can be
# used for a clean pull request, without unnecessary merge commits.

devel=devel
remote=source

# Is a git repo?
if [ -n "$1" ]; then
    if [ ! -d "$1" ]; then
        echo 'the given argument is not a directory'
        exit 1
    fi
    cd -P "$1"
fi

if [ ! -d .git ]; then
    echo 'the given directory is not a git repository'
    exit 1
fi

# Is the repo dirty?
status=`git status | awk '/^nothing to commit/'`
if [ -z "$status" ]; then
    echo "ERROR: There are pending changes"
    exit 1
fi

# Is the integration branch there?
if [ ! -f .git/refs/heads/$devel ] ; then
    echo "ERROR: The integration branch ${devel} does not exist"
    exit 1
fi

# Is the remote branch there?
if [ ! -d .git/refs/remotes/$remote ] ; then
    echo "ERROR: The original repository is not available as the remote ${remote}"
    exit 1
fi

# Are there changes in the remote branch?
git checkout -q master
git fetch $remote
git diff --quiet master $remote/master
if [ $? -eq 0 ]; then
    echo 'there are no changes to synchronize'
    git checkout -q $devel
    exit 1
fi

# Get the changes in the remote branch, but only by ff
git branch -f last-before-sync
git merge $remote/master --ff-only
if [ $? -ne 0 ]; then
    echo 'Master branch cannot be merged with $remote/master with a fast forward'
    git checkout -q $devel
    exit 1
fi

# Get the changes to the integration branch by regular merge
git checkout -q $devel
git merge master
